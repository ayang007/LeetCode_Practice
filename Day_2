/*Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.

You must write an algorithm with O(log n) runtime complexity.
*/

class Solution {
public:
    int search(vector<int>& nums, int target) {
        //approach: half the pool each time since the numbers are sorted in ascending order, this gives us O(log n) time complexity
        int half = ceil(nums.size()/2);
        int granularity;
        while (granularity >= 1) {
            granularity = ceil(granularity/2);
            if (nums[half] > target) {
                half += granularity;
                continue;
            }
            if (nums[half] < target) {
                half -= granularity;
                continue;
            }
            else
                return half;
        }
        return -1;
    }
};